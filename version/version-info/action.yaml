name: Determine version info
description: Determines version info based on git history and properties (e.g. COMMIT_SHA, ...)
# Schema: https://json.schemastore.org/github-action.json
outputs:
  version:
    value: ${{ steps.gather-version-info.outputs.version }}
    description: "A version identifier (defaults to 0.0.0; can include prerelease)"

  pre_release_label:
    value: ${{ steps.gather-version-info.outputs.pre_release_label }}
    description: "The pre-release label (if any)"
  pre_release_number:
    value: ${{ steps.gather-version-info.outputs.pre_release_number }}
    description: "The pre-release number (if any)"

  commit_sha:
    value: ${{ steps.gather-version-info.outputs.commit_sha }}
    description: "The commit SHA of the current commit"
  run_id:
    value: ${{ steps.gather-version-info.outputs.run_id }}
    description: "The run ID of the current run"
  run_number:
    value: ${{ steps.gather-version-info.outputs.run_number }}
    description: "The run NUMBER of the current run"
  is_prerelease:
    value: ${{ steps.gather-version-info.outputs.is_prerelease }}
    description: "Is the version a prerelease version?"
  is_release:
    value: ${{ steps.gather-version-info.outputs.is_release }}
    description: "Is the version a release version?"
  tag:
    value: ${{ steps.gather-version-info.outputs.tag }}
    description: "The tag of the current version"

runs:
  using: 'composite'
  steps:
    - name: Compute Version info
      id: gather-version-info
      shell: bash
      run: |
        echo " 🔖 Determining version based on git history and properties"
        export detected_version=$(dotnet-gitversion | jq -r ."SemVer")
        export pre_release_number=$(dotnet-gitversion | jq -r '."PreReleaseNumber" | select( . != null )')
        export pre_release_label=$(dotnet-gitversion | jq -r '."PreReleaseLabel" | select( . != null )')

        # informational purpose
        echo "gitversion=$(dotnet-gitversion | jq --raw-output -c .)" >> $GITHUB_OUTPUT

        if [[ -z "$pre_release_number" ]]; then
          echo "is_prerelease=false" >> $GITHUB_OUTPUT
          echo "is_release=true" >> $GITHUB_OUTPUT
          echo "pre_release_label=" >> $GITHUB_OUTPUT
          echo "pre_release_number=" >> $GITHUB_OUTPUT
        else
          echo "is_prerelease=true" >> $GITHUB_OUTPUT
          echo "is_release=false" >> $GITHUB_OUTPUT
        fi
        echo "version=$detected_version" >> $GITHUB_OUTPUT
        echo "tag=v$detected_version" >> $GITHUB_OUTPUT

        echo "commit_sha=${{ env.GITHUB_SHA }}" >> $GITHUB_OUTPUT
        echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT
        echo "run_number=${{ github.run_number }}" >> $GITHUB_OUTPUT

    - name: Summarize Version info
      id: summarize-version-info
      shell: bash
      run: |

        if [[ -z "${{ steps.gather-version-info.outputs.version }}" ]]; then
          echo "🚨 No version detected, exiting"
          exit 1
        fi

        echo "---- 📦 Summary ----"
        echo " 🏷 Version:     ${{ steps.gather-version-info.outputs.version }}"
        echo " 🔖 Commit SHA:  ${{ env.GITHUB_SHA }}"
        echo " 📷 Run Id:      ${{ github.run_id }}"
        echo " 📷 Run Number:  ${{ github.run_number }}"
        if [ "${{ steps.gather-version-info.outputs.is_prerelease }}" == "false" ]; then
          echo " 🚀 Type: Release"
        else
          echo " ⚠️ Type: Prerelease"
        fi
